#include <ESP8266WiFi.h>
#include <Thermistor.h> 
#include <MySQL_Connection.h>
#include <MySQL_Cursor.h>
#include <SPI.h>
#include <ESP8266WebServer.h> 
#include <WiFiClient.h>

IPAddress server_addr(35,198,26,170); 
IPAddress local_IP(192,168,100,1);
//IPAddress local_mask(255,255,0,0);
//IPAddress local_gateway(192,168,1,1);
//IPAddress gateway(192,168,4,9);
//IPAddress subnet(255,255,255,0);
char* ssidscan;
char* ssid1 = "DFG";
char* password1 = "umdoistres";
char* ssid2 = "DFG1";
char* password2 = "umdoistres";
char* ssid3 = "CamaraMunicipal_Ext2";
char* password3 = "cmpl2018";
char* ssid4 = "CamaraMunicipal_Ext1";
char* password4 = "cmpl2018";
char* ssid5 = "CamaraMunicipal";
char* password5 = "cmpl2018";
char* ssid6 = "REDECLASSIS2";
char* password6 = "_SENAI@2018_";
char* ssid7 = "REDECLASSIS 2";
char* password7 = "_SENAI@2018_";
char* ssid = "";
char* password = "";
WiFiClient client;

MySQL_Connection conn((Client *)&client);

String readString = String(30);


char usersql[] = "arduino";    
char passwordsql[] = "erickgostoso"; 
float variavel2 = 0.0;
const char* ssidconfig = "DFG1"; 
const char* passwordconfig = "umdoistres"; 

Thermistor temp(0); 

//ESP8266WebServer serverconfig(80);//server interno
WiFiServer serverconfig(80); //CASO OCORRA PROBLEMAS COM A PORTA 80, UTILIZE OUTRA (EX:8082,8089) E A CHAMADA DA URL FICARÁ IP:PORTA(EX: 192.168.0.15:8082)


void connectsql(){
    
  Serial.println("Trying to Connect SQL");
  while(!(conn.connect(server_addr, 3306, usersql, passwordsql))){
      blinkled(300,100,3);  
      delay(500);
      Serial.print(".");
  }
     digitalWrite(BUILTIN_LED, LOW);
    if (conn.connect(server_addr, 3306, usersql, passwordsql)) {
     delay(1000);
      Serial.println("SQL Conectado");
      
      MySQL_Cursor *cur_mem = new MySQL_Cursor(&conn);  
      
      cur_mem->execute("use banco1");
      delay(1000);
      cur_mem->execute("set time_zone = '-03:00';");
      delay(1000);
     // char teste[] = "insert into temperature (temp,sensor,data) VALUES (23.9,15,Now());";
      delay(1000);
      //cur_mem->execute(teste);
      delay(1000);
     // Serial.println("aa");
      delete cur_mem;
      }else{
    Serial.println("Sql Connection failed.");
    conn.close();
      }
  
  return;
            }
            
void sqlquery_insert(float variavel1){
    
    String number =  String(variavel1,1);
    String sqlqueryf = "insert into temperature (temp,sensor,data) values (" + number +",1,Now());";
    char sqlquerysend[sqlqueryf.length()];
    char sqlquerysendtry[sqlqueryf.length()];
    sqlqueryf.toCharArray(sqlquerysend,sqlqueryf.length()+1);
    
  if (conn.connect(server_addr, 3306, usersql, passwordsql)) {
      /*
      MySQL_Cursor *cur_mem = new MySQL_Cursor(&conn);  
      cur_mem->execute("use banco1");
      delete cur_mem;
      delay(100);
      MySQL_Cursor *cur_mem = new MySQL_Cursor(&conn);  
      cur_mem->execute("set time_zone = '-03:00';");
      delete cur_mem;
      */

        
      MySQL_Cursor *cur_mem = new MySQL_Cursor(&conn);  
      cur_mem->execute("use banco1");
      //delete cur_mem;     
      delay(100);
      cur_mem->execute("set time_zone = '-03:00';");
      delay(100);
      // MySQL_Cursor *cur_mem = new MySQL_Cursor(&conn);  
       cur_mem->execute(sqlquerysend);
       delete cur_mem;
     // Serial.println(sqlquery);
     // Serial.println(sqlqueryf);
     // Serial.println(sqlquery21);
      //delay(10000);
      
  }else{
    Serial.println("Insertion failed"); 
  }
}
void blinkled(int timer1,int timer2,int timer3){//200,200,3
  int timer4 = 0;
  pinMode(BUILTIN_LED, OUTPUT); 
 
 
 
  while(timer4 < timer3){
  timer4++;
  digitalWrite(BUILTIN_LED, LOW);
  delay(timer1);
  digitalWrite(BUILTIN_LED, HIGH);
  delay(timer2); 
  }
  
  return;
}
void wificonnect(){
  
  pinMode(BUILTIN_LED, OUTPUT);  
  int scan = WiFi.scanNetworks();
  int signal;
  Serial.println("");
  Serial.println("searching for Networks");
//faz o scan de rede 
  blinkled(200,200,10);
 

 // int signal ;

   //Serial.printf("%d network(s) found\n", networksFound);
//starta o for

for (int i = 0; i < scan;i++){
 // Serial.printf(" %s, Ch:%d (%ddBm) %s\n", WiFi.SSID(i).c_str(), WiFi.channel(i), WiFi.RSSI(i), WiFi.encryptionType(i) == ENC_TYPE_NONE ? "open" : "");
  //ssidscan = WiFi.SSID(i).c_str();
  
  String ssidscan = WiFi.SSID(i).c_str();
    if(ssidscan == ssid1){
    signal = WiFi.RSSI(i);
    ssid = ssid1;
    password = password1;
    Serial.println(ssid);
    Serial.println(signal);
        
  }
  ///
    if(ssidscan== ssid2 && WiFi.RSSI(i) > signal){
      ssid = ssid2;
      password = password2;
      signal = WiFi.RSSI(i);
       Serial.println(ssid);
       Serial.println(signal);
    
  }
  ///
    if(ssidscan == ssid3 && WiFi.RSSI(i) > signal){
      ssid = ssid3;
      password = password3;
        signal = WiFi.RSSI(i);
       Serial.println(ssid);
       Serial.println(signal);
  }
  ////
    if(ssidscan == ssid4 && WiFi.RSSI(i) > signal){
      ssid = ssid4;
      password = password4;
        signal = WiFi.RSSI(i);
       Serial.println(ssid);
       Serial.println(signal);
  }
  ///
    if(ssidscan == ssid5 && WiFi.RSSI(i) > signal){
      ssid = ssid5;
      password = password5;
      signal = WiFi.RSSI(i);
       Serial.println(ssid);
       Serial.println(signal);
  }
  ///
    if(ssidscan == ssid6 && WiFi.RSSI(i) > signal){
      ssid = ssid6;
      password = password6;
        signal = WiFi.RSSI(i);
       Serial.println(ssid);
       Serial.println(signal);
  }
  ////
    if(ssidscan == ssid7 && WiFi.RSSI(i) > signal){
      ssid = ssid7;
      password = password7;
      signal = WiFi.RSSI(i);
       Serial.println(ssid);
       Serial.println(signal);
  }
  ////
  

    
}
//Serial.println(ssid);
//Serial.println(password);



    

WiFi.scanDelete();
    
  // ter q testa essa krl
  //Serial.printf("O melhor ssid para se conectar e %s signal=%d\n",ssid_scan,signal );
  
 // for(int i =0;i<ssid_scan_available.size;i++){
  //Serial.print("Rede disponivel %i sinal %d\n",ssid_scan_available[i],signal_avalible[i]);
  
 // }
  
  //WiFi.begin(ssid_scan,passwordqeunsei);


pinMode(BUILTIN_LED, OUTPUT); 




WiFi.begin(ssid, password);
WiFi.softAPdisconnect (true);
Serial.print("Conectando a ");
Serial.println(ssid);
while(WiFi.status() != WL_CONNECTED) { 

blinkled(200,200,3);
delay(500);
Serial.print(".");
}





 


  
  Serial.println("");
  Serial.println("WiFi connected.");
  Serial.print("IP : ");
  Serial.println(WiFi.localIP());

       
  digitalWrite(BUILTIN_LED, LOW);

return;
}

///////////////
void setup() {
Serial.begin(115200); 
serverconfig.begin();

wificonnect();                
connectsql();                                      
                                      
}
void internalserver(float temperaturec){
  String temperaturaaa =  String(temperaturec,1);

      WiFiClient clientconfig = serverconfig.available(); 
      // if (clientconfig.available()) { // SE EXISTE CLIENTE, FAZ
       //while (clientconfig.connected()) {//ENQUANTO EXISTIR CLIENTE CONECTADO, FAZ

          clientconfig.println("HTTP/1.1 200 OK"); //ESCREVE PARA O CLIENTE A VERSÃO DO HTTP
          clientconfig.println("Content-Type: text/html"); //ESCREVE PARA O CLIENTE O TIPO DE CONTEÚDO(texto/html)
          clientconfig.println("");
          clientconfig.println("<!DOCTYPE HTML>"); //INFORMA AO NAVEGADOR A ESPECIFICAÇÃO DO HTML
          clientconfig.println("<html>"); //ABRE A TAG "html"
          clientconfig.println("<head>"); //ABRE A TAG "head"
          clientconfig.println("<meta http-equiv='refresh' content='1'>");
          //script
     //     clientconfig.println("<script>");
          
       //    clientconfig.println("function choosenetwork(){");
               
         //  clientconfig.println("var x = document.getElementById('ssid');");
           //clientconfig.println("var y = document.getElementById('password');");
           //clientconfig.println("test1 = x.value;");
            //clientconfig.println("console.log(y.value);");       
          //clientconfig.println("  }");
          //clientconfig.println("</script>");
          //script
           
            clientconfig.println("<style>input{height:35px;width:150px}</style>");
          clientconfig.println("<title>Sensor de Temperatura SENAI</title>"); 
          clientconfig.println("</head>"); //FECHA A TAG "head"
          clientconfig.println("<body style=background-color:#ADD8E6>"); 

          clientconfig.println("<center><font color='blue'><h1>Sensor Temperatura</font></center></h1>"); //
          clientconfig.println("<h1><center><font  size='20'>SENAI</center></h1>"); 
          //if (1 == 1){ //SE VARIÁVEL FOR IGUAL A 1, FAZ
              clientconfig.print("<center><font  size='15'>Temperatura : ");
          clientconfig.print(temperaturec);
           clientconfig.println(" Graus Celsius</center>");
        //  clientconfig.print("<center>Digite o nome da rede WIFI");
          //clientconfig.println("<center><input type=text id='ssid'></center> ");
          //clientconfig.print("<center>Digite a senha da rede WIFI");
          //clientconfig.println("<center><input type=text id='password'></center>");
          //A LINHA ABAIXO CRIA UM FORMULÁRIO CONTENDO 
          //clientconfig.println(" <button type='button' onclick='choosenetwork()'>Adicionar Rede Wifi</button> </center>");
         // }else{ //SENÃO, FAZ
          //A LINHA ABAIXO CRIA UM 
         // clientconfig.println("<center><form method=get name=LED><input type=hiddenubmit value=ACENDER></form></center>");
          //}
          
         // if (1 == 1){ //SE VARIÁVEL FO
         // clientconfig.print("<center><font color='green' size='5'>Senha do WIFI</center>"); 
         //  clientconfig.print("<center><font color='green' size='5'>ssid : ");
         //  clientconfig.print(ssid1);
         //  clientconfig.println("</center>"); 
          // clientconfig.print("<center><font color='green' size='5'>senha : ");
         //  clientconfig.print(pass1);
         //  clientconfig.println("</center>"); 
        //   clientconfig.print("<center><font color='red' size='10'>"); 
          // clientconfig.print(y);
           //clientconfig.print(WiFi.localIP());
        //   clientconfig.print(" </center>"); 
        //  }else{ //SENÃO, FAZ
           //   clientconfig.println("<center><font color='red' size='5'>DESLIGADO</center>"); //ESCREVE "DESLIGADO" EM COR VERMELHA NA PÁGINA
         // }     
        //  clientconfig.println("<hr/>"); //TAG HTML QUE CRIA UMA LINHA HORIZONTAL NA PÁGINA
          //clientconfig.println("<hr/>"); //TAG HTML QUE CRIA UMA LINHA HORIZONTAL NA PÁGINA
          clientconfig.println("</body>"); //FECHA A TAG "body"
          clientconfig.println("</html>"); //FECHA A TAG "html"
        //  readString=""; //A VARIÁVEL É REINICIALIZADA
              delay(1000);
              
            //}
           // clientconfig.stop(); //FINALIZA A REQUISIÇÃO HTTP E DESCONECTA O CLIENTE
         // }
          
      //  }
     // }


  return;
}


void loop() {
 //



//parte do wifi
if(WiFi.status() != WL_CONNECTED){
  blinkled(200,200,5);;
 Serial.println("Desconectado da rede ");
 Serial.println("Tentando se conectar Novamente!"); 
 wificonnect();
    
}
if(!(conn.connect(server_addr, 3306, usersql, passwordsql))){

 Serial.println("Desconectado do SQL     ");
 Serial.println("Tentando se conectar Novamente!"); 
 wificonnect();     
 connectsql();     
}


                     


//parte do wifi
delay(1000);
 

float temperaturec = temp.getTemp();

if(temperaturec < -20.0){
  temperaturec = -20.0;
}
if(temperaturec > 120.0){
  temperaturec = 120.0;
}
if(ssid1 == ""){
    
     internalserver(temperaturec);  
}
//Serial.println(temperaturec);
//MANIPULAÇAO DE STRING
//Serial.println(temperaturec);
//Serial.println(variavel2);
float resto1 = 0.0;
if(variavel2 > temperaturec){
     resto1 = variavel2-temperaturec;     
}else{
     resto1 = temperaturec - variavel2;
}
if(resto1 > 0.25){
  sqlquery_insert(temperaturec);
  variavel2 = temperaturec;
    Serial.print("Enviado ");
    Serial.println(temperaturec);
}else{
  Serial.println("PARECIDAS DEMAIS");
}




//Serial.print(temperaturec);
//Serial.println("° C");
float temperaturef =(temperaturec * 1.8)+32;
float temperaturek =temperaturec + 273;
delay(1000);

}